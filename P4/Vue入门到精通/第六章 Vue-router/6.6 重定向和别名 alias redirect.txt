6.6 重定向和别名 alias redirect

首页： /layout/home 
全部课程页：/layout/courseall
课程详情页：/layout/coursedetail/:courseId

可以看到这三个路径中都有 layout，但实际上我们遇到的情况是，官网首页一般是
https://www.xxx.com/ 。这时候我们就可以使用路由功能中的别名和重定向把 /layout/home
变成 / 。

首先我们使用别名。

别名

别名，顾名思义就是两个名字都指向同一个路由：
const routes: [
  // 定义 alias 属性
  { path: '/a', alias: '/b', component: A }
];
当访问的 /a时，渲染的是A；当访问 /b时，就像访问 /a一样，渲染的也是A。

我们的目的是把/layout/home 变成 /，所以要把layout去掉：
const routes: [
  {
    path: '/layout',
    // 别名定为 /
    alias: '/',
    component: ()=> import('@/pages/nest/Layout.vue'),
    children: [
      { path: 'home', component: Home },
      { path: 'courseall', component: CourseAll },
      { path: 'coursedetail/:courseId', component: CourseDetail }
    ]
  }
];
这时候/layout/home 变成了 /home；

接下来我们要用重定向把 /home 变成 / 。

路由重定向

先了解重定向的意思。
若路由 /a 重定向到 /b，即访问 /a 时，url会自动跳到 /b，如何匹配路由 /b：
const routes: [
  // 定义 redirect 属性，将 /a 重定向到 /b
  { path: '/a', redirect: '/b' }
]
现在我们希望 / 重定向到 /home，这样访问 / 时会自动跳到 /home：
const routes: [
  {
    path: '/layout',
    alias: '/',
    // 重定向到 /home
    redirect: '/home',
    component: ()=> import('@/pages/nest/Layout.vue'),
    children: [
      { path: 'home', component: Home },
      { path: 'courseall', component: CourseAll },
      { path: 'coursedetail/:courseId', component: CourseDetail }
    ]
  }
];